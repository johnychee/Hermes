@using TestWebApp.Models
@using PagedList
@using PagedList.Mvc
@model Ticket
@{
    ViewBag.Title = "Ticket";
    ViewBag.SubTitle = "Details";
    ViewBag.Parents = new LinkedList<KeyValuePair<string, string>>();
    ViewBag.Parents.AddLast(new KeyValuePair<string, string>("Ticket", null));

    HelpDeskEntities hDesk = new HelpDeskEntities();
    User current_user = hDesk.Users.Single(u => u.id == WebSecurity.CurrentUserId);

    bool IsTheSolutionistOfTheTicket = (Model.solutionistId == WebSecurity.CurrentUserId && Model.Status.name == "AssignedToUser");

    bool theGroupHasTheTicket = false;
    foreach (Group group in current_user.Groups)
    {
        if (group.Tickets.SingleOrDefault(t => t.id == Model.id) != null
            && Model.Status.name != "Accepted")
        {
            theGroupHasTheTicket = true;
            break;//now we r sure that one of groups of the current user has the ticket,turn to true
        }
    }
}

<div class="col-md-6">
    <div class="panel panel-inverse">
        <div class="panel-heading">
            <h4 class="panel-title">Ticket Details</h4>
        </div>
        <div class="panel-body">
            <table class="table">
                <tbody>
                    <tr>
                        <th>Ticket Id:</th>
                        <td>@Model.ticketId</td>
                    </tr>
                    <tr>
                        <th>Created by:</th>
                        @if (Model.CreatedBy_ == null)
                        {
                            <td>@Html.ActionLink(Model.Author.fullName, "Details/" + Model.Author.id, "User", null, new { target = "_blank" })</td>
                        }
                        else
                        {
                            <td>@Html.ActionLink(Model.CreatedBy_.fullName, "Details/" + Model.CreatedBy_.id, "User", null, new { target = "_blank" })</td>
                        }
                    </tr>
                    <tr>
                        <th>Customer:</th>
                        <td>@Html.ActionLink(Model.Author.fullName, "Details/" + Model.authorId, "User", null, new { target = "_blank" })</td>
                    </tr>
                    @if (Model.isAccepted() || Model.Status.name == "AssignedToUser" || Model.Status.name == "Done") //if the ticket is accepted then show the solutionist name ^^
                    {
                        <tr>
                            <th>Solutionist:</th>
                            <td>@Html.ActionLink(Model.Solutionist_.fullName, "Details/" + Model.solutionistId, "User", null, new { target = "_blank" })</td>
                        </tr>
                        if (Model.Group != null || Model.Status.name == "Done")
                        {
                            <tr>
                                <th>Group</th>
                                <td>@Html.ActionLink(Model.Group.name, "Details/" + Model.groupId, "Group", null, new { target = "_blank" })</td>
                            </tr>
                        }
                    }
                    else if (Model.Status.name == "AssignedToGroup" || Model.Status.name == "AssignedToUser")
                    {
                        <tr>
                            <th>Group</th>
                            <td>@Html.ActionLink(Model.Group.name, "Details/" + Model.Group.id, "Group", null, new { target = "_blank" })</td>
                        </tr>
                    }

                    <tr>
                        <th>Status:</th>
                        <td>@Model.Status.name</td>
                    </tr>
                    <tr>
                        <th>Response time remaining:</th>
                        <td>@(Model.TicketSla.RT_realCompletedAt == null ? Model.TicketSla.RTremaining_toString() : "Done")</td>
                    </tr>
                    <tr>
                        <th>Fix time Remote remaining:</th>
                        <td>@(Model.TicketSla.FT_realCompletedAt == null ? Model.TicketSla.FTremaining_toString() : "Done")</td>
                    </tr>
                    <tr>
                        <th>Fix time Onsite remaining:</th>
                        <td>@(Model.TicketSla.FT3lvl_realCompletedAt == null ? Model.TicketSla.FT3lvlRemaining_toString() : "Done")</td>
                    </tr>
                    @if (Model.TicketType != null)
                    {
                        <tr>
                            <th>Type:</th>
                            <td>@Model.TicketType.name</td>
                        </tr>
                    }
                    <tr>
                        <th>Subject:</th>
                        <td>@Model.subject</td>
                    </tr>
                    <tr>
                        <th>Product:</th>
                        <td>@Html.ActionLink(Model.Product.name, "Details/" + Model.productId, "Product", null, new { target = "_blank" })</td>
                    <tr>
                        <th>Issue:</th>
                        <td>@Model.text</td>
                    </tr>
                    @if ((Model.Status.name == "New"
                           && current_user.webpages_Roles.SingleOrDefault(r => r.level == 1 || r.RoleName == "SuperUser") != null) //ticket is new and spp level is 1
                           || (theGroupHasTheTicket && Model.Status.name != "AssignedToUser" && Model.statusId != 6)//or the group has this ticket but status is not assigned to USER
                           || (IsTheSolutionistOfTheTicket && Model.statusId != 6)) // or it is assigned to the user and the status is not SOLVED
                    {
                        using (Html.BeginForm())
                        {
                            if (Model.TicketType == null)//if the ticket type is still null, then Show this form
                            {
                                <tr>
                                    <th>Choose Type:</th>
                                    <td>
                                        @Html.DropDownList("Types", TicketType.all_toSelectList())
                                    </td>
                                </tr>
                            }
                            //The logged user need to choose the group for the accepted ticket,because he/she can be in more than
                            //1 group......
                            //if the ticket is NEW,then show only group lvl1 !
                            if (Model.Status.name == "New")
                            {
                                <tr>
                                    <th>Choose Group:</th>
                                    <td>
                                        @Html.DropDownList("UsersGroupsLevel1", Group.all_toSelectList(1, current_user.id, hDesk))
                                    </td>
                                </tr>
                            }


                            <tr>
                                <th>Accept:</th>
                                <td>
                                    <button class="btn btn-warning pull-left" name="Submit" value="AcceptTicket">Accept</button>
                                </td>
                            </tr>
                        }
                    }
                    @if ((@Model.Status.name != "Done" 
                        || @Model.Status.name != "New") 
                        && @Model.Status.name != "Refused" 
                        && Roles.IsUserInRole("Support") 
                        && current_user.webpages_Roles.Single(r=> r.level == 1) != null)
                    {//if ticket is not done ,not new, and logged in user is a supprt level 1 then she/he can assign this ticket to anyone.
                        <tr>
                            <th>Assign Ticket To User:</th>
                            <td>
                                @Html.ActionLink("Assign Ticket", "AssignToUser", "Ticket", new { @id = @Model.id }, new { @class = "btn btn-primary"})
                            </td>
                        </tr>
                    }
                    @if (@Model.Status.name == "New" && Roles.IsUserInRole("Support") && current_user.webpages_Roles.Single(r => r.level == 1) != null)
                    {//support level 1 can Refuse the newly created ticket 
                        <tr>
                            <th>Refuse:</th>
                            <td>
                                @Html.ActionLink("Refuse ticket", "Refuse", "Ticket", new { @id = @Model.id }, new { @class = "btn btn-danger" })
                            </td>
                        </tr>
                    }
                    @if ((@Model.Status.name == "Refused" || @Model.Status.name == "Done" ) && current_user.Retailer !=null && @Model.authorId == current_user.id)
                    {//if the ticket is done or refused, retailer can reclaim it
                        <tr>
                            <th>Reclaim:</th>
                            <td>
                                @Html.ActionLink("Reclaim ticket", "Reclaim", "Ticket", new { @id = @Model.id }, new { @class = "btn btn-warning" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    @if (Model.Status.name == "Accepted" && Model.Solutionist_.id == current_user.id && Model.Status.name != "Done")
    {
        using (Html.BeginForm())
        {
            <div class="panel panel-inverse">
                <div class="panel-heading">
                    <h4 class="panel-title">Actions</h4>
                </div>
                <div class="panel-body">
                    <table class="table">
                        <tr>
                            <th>Transmit ticket:</th>
                            <td>@Html.ActionLink("Transmit ticket", "Transmit/" + Model.id, "Ticket", null, new { @class = "btn btn-danger" })</td>
                        </tr>
                        <tr>
                            <th>Change ticket type:</th>
                            <td>@Html.ActionLink("Change type", "ChangeType/" + Model.id, "Ticket", null, new { @class = "btn btn-primary" })</td>
                        </tr>
                        <tr>
                            <th>Groups:</th>
                            <td>@Html.DropDownList("Groups", Group.all_toSelectList(null, null, hDesk), "Select group", new { @class = "from-control" })</td>
                        </tr>

                        <tr>
                            <td>
                                <button class="btn btn-warning pull-left" name="Submit" value="SetComplete">Set ticket as done</button>
                            </td>
                            <td>
                                <button class="btn btn-success pull-right" name="Submit" value="Assign">Assign</button>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        }

    }

</div>
<div class="col-md-6">
    <div class="panel panel-inverse">
        <div class="panel-heading">
            <h4 class="panel-title">Posts</h4>
        </div>
        <div class="panel-body">
            @foreach (var item in (IPagedList<TicketPost>)ViewBag.TicketPosts) //ipagedlist for pagination
            {
                if(item.isVisible == true || current_user.Solutionist != null)
                { 
                    <div class="media media-sm">
                        <a href="javascript:;" class="pull-left">
                            @if(@item.User.profilePictureUrl != null)
                            { 
                            <img src="@item.User.profilePictureUrl" alt="@item.User.username" class="media-object" />
                            }
                            else
                            {
                                <img src="~/assets/img/user-default.png" alt="@item.User.username" class="media-object" />

                            }
                        </a>
                        <div class="media-body">
                            <h4 class="media-heading">@Html.ActionLink(@item.User.fullName, "Details/" + @item.User.id, "User")</h4>
                            <span class="@(item.isVisible == true ? "" : "fa fa-lock")"></span>
                           @(item.isVisible == true ? "" : "[Private] ") @item.text

                            <p><span class="date">@item.createdAt.ToLocalTime()</span></p>
                        </div>
                    </div>
                }
            }
            <br />
            
                @Html.PagedListPager((IPagedList<TicketPost>)ViewBag.TicketPosts, page => Url.Action("Details/" + Model.id, new { page }))
            
            @* New post Form *@
            @using (@Html.BeginForm("CreatePost/" + Model.id, "Ticket", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                <div class="form-group">
                    <div class="col-md-12 ui-sortable">
                        @Html.TextArea("Text", Request.QueryString["Text"] == null ? "" : Request.QueryString["Text"], new { @class = "form-control", @placeholder = "Text" })
                    </div>
                </div>
                if (current_user.isSolutionist)
                {
                    @Html.CheckBox("isVisible",true, new { @data_render = "switchery", @data_theme = "default" })
                    <label for="isVisible" class="ui-sortable">Is visible for customer</label>
                }
                <button class="btn btn-success pull-right" name="Submit" value="Send">Send</button>
            }
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-inverse">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-warning" data-click="panel-collapse"><i class="fa fa-minus"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-danger" data-click="panel-remove"><i class="fa fa-times"></i></a>
                </div>
                <h4 class="panel-title">File Upload</h4>
            </div>
            <div class="panel-body">
                <blockquote class="f-s-14">
                    <p>
                        NexDesk FileUpload v0.1
                    </p>
                </blockquote>
                @using (Html.BeginForm("Details/" + Model.id, "Ticket", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="row fileupload-buttonbar">
                        <div class="col-md-7">
                            <div class="col-md-6">
                                <input type="file" name="attachedFiles" multiple class="btn btn-warning" />
                            </div>
                            <div class="col-md-2">
                                <button type="submit" name="Submit" value="UploadFiles" class="btn btn-primary start">
                                    <i class="fa fa-upload"></i>
                                    <span>Start upload</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }
                <br />
                @if (Model.Attachments.Count > 0)
                {
                    <table class="table table-responsive table-bordered">
                        <tr>
                            <th>File</th>
                            <th>Action</th>
                        </tr>
                        @foreach (Attachment attachment in (IPagedList<Attachment>)ViewBag.TicketAttachments)
                        {
                            <tr>
                                <td>@attachment.name</td>
                                <td>
                                    <a href="@attachment.url" class="fa fa-download"> Download</a> |
                                    <a href="~/Attachment/Delete/@attachment.id?ticketId=@Model.id" class="fa fa-remove red" onclick="return confirm('Are you sure you wish to delete this attachment?');"> Delete</a>
                                </td>
                            </tr>
                        }
                    </table>
                    @Html.PagedListPager((IPagedList<Attachment>)ViewBag.TicketAttachments, AttachmentPage => Url.Action("Details/" + Model.id, new { AttachmentPage }))

                }
                <div class="note note-info">
                    <h4>Attachments Notes</h4>
                    <ul>
                        <li>The maximum file size for upload is <strong>6 MB</strong> </li>
                        <li>You should zip files if you plan to upload more files at once.</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="col-md-12">
    <h2>History</h2>
    <ul class="timeline">
        @foreach (TicketHistory tHistory in Model.TicketHistories.OrderByDescending(t => t.date))
        {
            <li class="timeline-last">
                <div class="timeline-time">
                    <span class="date">@tHistory.date.ToLocalTime().ToShortDateString()</span>
                    <span class="time">@tHistory.date.ToLocalTime().ToShortTimeString()</span>
                </div>
                <div class="timeline-icon">
                    <a href="javascript:;">
                        <i class="fa fa-paper-plane"></i>
                    </a>
                </div>
                <div class="timeline-body">
                    <div class="timeline-header">
                        @if(@tHistory.User.profilePictureUrl != null)
                        { 
                            <span class="userimage"><img src="@tHistory.User.profilePictureUrl" alt="user-1" class="img-thumbnail"/></span>
                        }
                        else
                        {
                            <span class="userimage"><img src="~/assets/img/user-default.png" alt="user-1" class="img-thumbnail" /></span>

                        }
                        <span class="username">@Html.ActionLink(tHistory.User.fullName, "Details", "User", new { @id = tHistory.userId }, new { target = "_blank" })</span>

                    </div>
                    <div class="timeline-content">
                        <p><b>Subject :</b> @tHistory.text</p>
                        @if (tHistory.reason != null)
                        { 
                            <p><b>Reason :</b> @tHistory.reason</p>
                        }
                        else
                        { 
                            <p></p>
                        }
                    </div>
                </div>
            </li>
        }
    </ul>
</div>
